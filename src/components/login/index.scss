@import url("https://fonts.googleapis.com/css2?family=Lato:ital@1&display=swap");

.borderLogin {
  border-radius: 10px, 20px;
  border: 2px solid;
  border-color: #00000045;
}

.buttonLogin {
  font-weight: 500;
  color: antiquewhite;
  background: rgb(2, 0, 36);
  background: linear-gradient(
    90deg,
    rgba(11, 175, 187, 0.339) 0%,
    rgba(50, 50, 183, 0.133) 42%,
    rgba(0, 212, 255, 1) 100%
  );
  &:hover {
    background: rgb(2, 0, 36);
    background: linear-gradient(
      90deg,
      rgba(11, 20, 187, 0.339) 0%,
      rgba(50, 50, 183, 0.133) 42%,
      rgb(0, 110, 255) 100%
    );
  }
}

.inputLogin {
        background-color: #06051f62;
  border-bottom: 1px solid #00000092;
  font-weight: 100;
  color: #1fbce1
}

.inputLogin::placeholder {
  background-color:transparent;
  color: #1fbce1
}

.animSlowly {
  animation: spins 10s linear infinite;
}
.fontMessage {
  font-family: "Lato", sans-serif;
  font-size: 14px;
  font-weight: 600;
}

@keyframes spins {
  to {
    transform: rotate(360deg);
  }
}

.chargeLogin {
  animation: chargingLOGIN 1s linear infinite;
  animation-direction: alternate;
  background: linear-gradient(
    50deg,
    rgb(255, 251, 0) 20%,
    rgba(9, 9, 121, 1) 50%,
    rgb(255, 0, 0) 60%
  );
}
@keyframes chargingLOGIN {
  0% {
    transform: translateX(16px);
  }
  50% {
    transform: translateX(-150px);
  }
  100% {
    transform: translateX(18px);
  }
}
$colors: (
  purple: #241379,
  medium-blue: #2185bf,
  light-blue: #1fbce1,

  red: #b62f56,
  orange: #d5764c,
  yellow: #ffd53e,

  cyan: #78ffba,
  light-green: #98fd85,
  lime: #befb46,

  magenta: #6c046c,
  lightish-red: #f04c81,
  pink: #ff4293
);

.loginBack {
  background: radial-gradient(circle, #24246e, #06051f);
  //isolation: isolate;
  overflow: hidden;
  width: 100vw;
  height: 100vh;
  
  &:active {
    div,
    div::before,
    div::after { 
      // Commented out for performance
      //mix-blend-mode: color-dodge;
      padding: 40px;
    }
  }
  div,
  div::before,
  div::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    opacity: 0.9;
    transform-origin: top;
    transition: all 5s linear 0s;
  }
  
}


@function random-num($min, $max) {
  @return floor(random() * ($max - $min) + $min);
}

@function random-calc($number) {
  $max: 100 - $number;
  $min: $number * -1;
  @return random-num($min, $max);
}

@each $color-name, $color-hex in $colors {
  // Initial top and left positions
  $random1: random(100);
  $random2: random(100);

  // Animated top and left positions
  $random3: random(100);
  $random4: random(100);
  
  // Animated top and left end positions
  $random5: random(100);
  $random6: random(100);

  .#{$color-name} {
    $size: random-num(5,50) + px;
    animation: #{$color-name} linear 30s alternate infinite;
    border: 2px solid #{$color-hex};
    border-radius: 100%;
    width: $size;
    height: $size;
    transform: translate3d(
      $random1 + vw,
      $random2 + vh,
      0);
    z-index: random(12);
  }

  .#{$color-name}::before {
    animation: #{$color-name}-pseudo linear 15s alternate infinite;
    background: #{$color-hex};
    border: 2px solid #{$color-hex};
    width: random-num(5,50) + px;
    height: random-num(5,50) + px;
    transform:
      translate3d(
        random-calc($random1) + vw,
        random-calc($random2) + vh,
        0)
      rotate((random(360)) + deg);
  }

  .#{$color-name}::after{
    animation: #{$color-name}-pseudo linear 20s alternate infinite;
    border: 2px solid #{$color-hex};
    width: random-num(5,50) + px;
    height: random-num(5,50) + px;
    transform:
      translate3d(
        random-calc($random1) + vw,
        random-calc($random2) + vh,
        0)
      rotate((random(360)) + deg);
  }

  @keyframes #{$color-name} {
    50% {
      transform: translate3d(
        $random3 + vw,
        $random4 + vh,
        0);
    }
    100% {
      transform: translate3d(
        $random5 + vw,
        $random6 + vh,
        0);
    }
  }

  @keyframes #{$color-name}-pseudo {
    33% {
      transform:
        translate3d(
          random-calc($random3) + vw,
          random-calc($random4) + vh,
          0)
        rotate((random(360)) + deg);
    }
    100% {
      transform:
        translate3d(
          random-calc($random5) + vw,
          random-calc($random6) + vh,
          0)
        rotate((random(360)) + deg);
    }
  }
}